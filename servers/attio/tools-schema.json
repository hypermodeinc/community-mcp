{
  "tools": [
    {
      "name": "test_connection",
      "description": "Test connection to Attio MCP server",
      "inputSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Optional test message"
          }
        },
        "required": []
      }
    },
    {
      "name": "introspect_workspace",
      "description": "Get comprehensive information about the Attio workspace structure, including objects, attributes, lists, and current user permissions",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "get_workspace_members",
      "description": "List all workspace members and their details",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "get_workspace_member",
      "description": "Get details of a specific workspace member",
      "inputSchema": {
        "type": "object",
        "properties": {
          "workspace_member_id": {
            "type": "string",
            "description": "The ID of the workspace member to retrieve"
          }
        },
        "required": ["workspace_member_id"]
      }
    },
    {
      "name": "get_self",
      "description": "Get information about the current API token and workspace",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "list_objects",
      "description": "List all objects (both system and custom) in the workspace",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "get_object",
      "description": "Get detailed information about a specific object",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Object ID or slug (e.g., 'people', 'companies', 'opportunities')"
          }
        },
        "required": ["object"]
      }
    },
    {
      "name": "create_object",
      "description": "Create a new custom object in the workspace",
      "inputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "api_slug": {
                "type": "string",
                "description": "API slug for the object"
              },
              "singular_noun": {
                "type": "string",
                "description": "Singular noun for the object"
              },
              "plural_noun": {
                "type": "string",
                "description": "Plural noun for the object"
              },
              "icon": {
                "type": "string",
                "description": "Icon for the object"
              },
              "is_enabled": {
                "type": "boolean",
                "description": "Whether the object is enabled"
              }
            },
            "required": ["api_slug", "singular_noun", "plural_noun"],
            "additionalProperties": false,
            "description": "Object data to create"
          }
        },
        "required": ["data"]
      }
    },
    {
      "name": "update_object",
      "description": "Update an existing object",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Object ID or slug"
          },
          "data": {
            "type": "object",
            "properties": {
              "singular_noun": {
                "type": "string",
                "description": "Singular noun for the object"
              },
              "plural_noun": {
                "type": "string",
                "description": "Plural noun for the object"
              },
              "icon": {
                "type": "string",
                "description": "Icon for the object"
              },
              "is_enabled": {
                "type": "boolean",
                "description": "Whether the object is enabled"
              }
            },
            "additionalProperties": false,
            "description": "Object data to update"
          }
        },
        "required": ["object", "data"]
      }
    },
    {
      "name": "get_object_attributes",
      "description": "List all attributes for a specific object",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "Object ID or slug"
          }
        },
        "required": ["object"]
      }
    },
    {
      "name": "list_attributes",
      "description": "List all attributes for a specific object or list",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          }
        },
        "required": ["target", "identifier"]
      }
    },
    {
      "name": "create_attribute",
      "description": "Create a new attribute on an object or list",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Attribute title"
              },
              "api_slug": {
                "type": "string",
                "description": "API slug for the attribute"
              },
              "type": {
                "type": "string",
                "description": "Attribute type"
              },
              "is_required": {
                "type": "boolean",
                "description": "Whether the attribute is required"
              },
              "is_multiselect": {
                "type": "boolean",
                "description": "Whether the attribute allows multiple values"
              },
              "config": {
                "type": "object",
                "additionalProperties": {},
                "description": "Additional configuration"
              }
            },
            "required": ["title", "api_slug", "type"],
            "additionalProperties": false,
            "description": "Attribute data"
          }
        },
        "required": ["target", "identifier", "data"]
      }
    },
    {
      "name": "get_attribute",
      "description": "Get information about a specific attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          }
        },
        "required": ["target", "identifier", "attribute"]
      }
    },
    {
      "name": "update_attribute",
      "description": "Update an existing attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Attribute title"
              },
              "is_required": {
                "type": "boolean",
                "description": "Whether the attribute is required"
              },
              "config": {
                "type": "object",
                "additionalProperties": {},
                "description": "Additional configuration"
              }
            },
            "additionalProperties": false,
            "description": "Attribute data to update"
          }
        },
        "required": ["target", "identifier", "attribute", "data"]
      }
    },
    {
      "name": "list_select_options",
      "description": "List all select options for a select attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          }
        },
        "required": ["target", "identifier", "attribute"]
      }
    },
    {
      "name": "create_select_option",
      "description": "Create a new select option for a select attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Option title"
              },
              "color": {
                "type": "string",
                "description": "Option color"
              }
            },
            "required": ["title"],
            "additionalProperties": false,
            "description": "Select option data"
          }
        },
        "required": ["target", "identifier", "attribute", "data"]
      }
    },
    {
      "name": "update_select_option",
      "description": "Update an existing select option",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          },
          "option": {
            "type": "string",
            "description": "Option ID"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Option title"
              },
              "color": {
                "type": "string",
                "description": "Option color"
              }
            },
            "additionalProperties": false,
            "description": "Select option data to update"
          }
        },
        "required": ["target", "identifier", "attribute", "option", "data"]
      }
    },
    {
      "name": "list_statuses",
      "description": "List all statuses for a status attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          }
        },
        "required": ["target", "identifier", "attribute"]
      }
    },
    {
      "name": "create_status",
      "description": "Create a new status for a status attribute",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Status title"
              },
              "color": {
                "type": "string",
                "description": "Status color"
              }
            },
            "required": ["title"],
            "additionalProperties": false,
            "description": "Status data"
          }
        },
        "required": ["target", "identifier", "attribute", "data"]
      }
    },
    {
      "name": "update_status",
      "description": "Update an existing status",
      "inputSchema": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "Target type (objects or lists)"
          },
          "identifier": {
            "type": "string",
            "description": "Object or list identifier"
          },
          "attribute": {
            "type": "string",
            "description": "Attribute ID or slug"
          },
          "status": {
            "type": "string",
            "description": "Status ID"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Status title"
              },
              "color": {
                "type": "string",
                "description": "Status color"
              }
            },
            "additionalProperties": false,
            "description": "Status data to update"
          }
        },
        "required": ["target", "identifier", "attribute", "status", "data"]
      }
    },
    {
      "name": "search_records",
      "description": "Search for records in Attio CRM with advanced filtering and sorting options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type to search (e.g., 'people', 'companies', 'opportunities')"
          },
          "query": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of records to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of records to skip for pagination"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["object", "query"]
      }
    },
    {
      "name": "get_record",
      "description": "Get a specific record by ID with all its data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type (e.g., 'people', 'companies')"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record to retrieve"
          }
        },
        "required": ["object", "record_id"]
      }
    },
    {
      "name": "create_record",
      "description": "Create a new record in Attio CRM",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type (e.g., 'people', 'companies', 'opportunities')"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes for the new record"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The record data to create"
          }
        },
        "required": ["object", "data"]
      }
    },
    {
      "name": "update_record",
      "description": "Update an existing record in Attio CRM (appends to multiselect fields)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type (e.g., 'people', 'companies', 'opportunities')"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record to update"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes to update"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The record data to update"
          }
        },
        "required": ["object", "record_id", "data"]
      }
    },
    {
      "name": "put_update_record",
      "description": "Update an existing record in Attio CRM (overwrites multiselect fields)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type (e.g., 'people', 'companies', 'opportunities')"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record to update"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes to overwrite"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The record data to overwrite"
          }
        },
        "required": ["object", "record_id", "data"]
      }
    },
    {
      "name": "upsert_record",
      "description": "Create or update a record based on matching criteria (assert operation)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes"
              },
              "matching_attribute": {
                "type": "string",
                "description": "Attribute to match against for existing records"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The record data with matching criteria"
          }
        },
        "required": ["object", "data"]
      }
    },
    {
      "name": "delete_record",
      "description": "Delete a record by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record to delete"
          }
        },
        "required": ["object", "record_id"]
      }
    },
    {
      "name": "get_record_attribute_values",
      "description": "Get all values for a specific attribute on a record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record"
          },
          "attribute": {
            "type": "string",
            "description": "The attribute ID or slug"
          },
          "show_historic": {
            "type": "boolean",
            "description": "Include historic values"
          }
        },
        "required": ["object", "record_id", "attribute"]
      }
    },
    {
      "name": "get_record_entries",
      "description": "List all list entries for a specific record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type"
          },
          "record_id": {
            "type": "string",
            "description": "The ID of the record"
          }
        },
        "required": ["object", "record_id"]
      }
    },
    {
      "name": "search_people",
      "description": "Search for people in Attio CRM with filtering and sorting options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of people to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of people to skip for pagination"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "get_person",
      "description": "Get a specific person by ID with all their data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "person_id": {
            "type": "string",
            "description": "The ID of the person to retrieve"
          }
        },
        "required": ["person_id"]
      }
    },
    {
      "name": "search_companies",
      "description": "Search for companies in Attio CRM with advanced filtering and sorting options. Supports complex filters with $and/$or operators, field-specific sorting, and pagination.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "filter": {
                "type": "object",
                "additionalProperties": {},
                "description": "Filter object to subset records. Supports complex filtering with $and, $or operators"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria with direction and attribute"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of companies to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of companies to skip for pagination"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "get_company",
      "description": "Get a specific company by ID with all its data including attributes, values, and metadata",
      "inputSchema": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the company record to retrieve"
          }
        },
        "required": ["company_id"]
      }
    },
    {
      "name": "create_company",
      "description": "Create a new company in Attio CRM. Standard attributes include: domains, name, description, team, primary_location, categories, foundation_date, employee_range",
      "inputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes for the new company. Standard attributes include: domains (array), name (string), description (string), team (array of emails), primary_location (string), categories (array), foundation_date (string), employee_range (string), etc."
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The company data to create"
          }
        },
        "required": ["data"]
      }
    },
    {
      "name": "update_company",
      "description": "Update an existing company in Attio CRM. For multiselect attributes, values are appended to existing values",
      "inputSchema": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the company record to update"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes to update. For multiselect attributes, values will be appended to existing values."
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The company data to update"
          }
        },
        "required": ["company_id", "data"]
      }
    },
    {
      "name": "assert_company",
      "description": "Create or update a company using a unique attribute for matching (default: domains). If company exists, it's updated; otherwise, it's created",
      "inputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes for the company"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The company data to create or update"
          },
          "matching_attribute": {
            "type": "string",
            "description": "The ID or slug of the attribute to use for matching existing companies. For companies, 'domains' is the default unique attribute"
          }
        },
        "required": ["data"]
      }
    },
    {
      "name": "delete_company",
      "description": "Delete a company by ID. This action cannot be undone",
      "inputSchema": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the company record to delete"
          }
        },
        "required": ["company_id"]
      }
    },
    {
      "name": "get_company_attribute_values",
      "description": "Get all values for a specific attribute on a company record. Supports historic values and pagination. Cannot query historic values for COMINT/enriched attributes",
      "inputSchema": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the company record to fetch attribute values for"
          },
          "attribute": {
            "type": "string",
            "description": "UUID or slug of the attribute to query values for (e.g., 'domains', 'name', 'description')"
          },
          "show_historic": {
            "type": "boolean",
            "description": "If true, returns all historic values. If false, only current active values. Cannot be true for COMINT/enriched attributes"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "Maximum number of results to return (required, max: 10)"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "description": "Number of results to skip for pagination"
          }
        },
        "required": ["company_id", "attribute", "limit"]
      }
    },
    {
      "name": "get_company_entries",
      "description": "List all list entries across all lists where this company is the parent record. Useful for finding which lists contain this company",
      "inputSchema": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the company record to fetch entries for"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "Maximum number of results to return (required, max: 10)"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "description": "Number of results to skip for pagination"
          }
        },
        "required": ["company_id", "limit"]
      }
    },
    {
      "name": "search_deals",
      "description": "Search for deals in Attio CRM with filtering and sorting options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of deals to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of deals to skip for pagination"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "get_deal",
      "description": "Get a specific deal by ID with all its data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deal_id": {
            "type": "string",
            "description": "The ID of the deal to retrieve"
          }
        },
        "required": ["deal_id"]
      }
    },
    {
      "name": "create_deal",
      "description": "Create a new deal in Attio CRM",
      "inputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes for the new deal. Standard attributes include: name (string), stage (string), owner (string/email), value (number), associated_people (array), associated_company (object)"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The deal data to create"
          }
        },
        "required": ["data"]
      }
    },
    {
      "name": "update_deal",
      "description": "Update an existing deal in Attio CRM",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deal_id": {
            "type": "string",
            "description": "The ID of the deal to update"
          },
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes to update"
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The deal data to update"
          }
        },
        "required": ["deal_id", "data"]
      }
    },
    {
      "name": "assert_deal",
      "description": "Create or update a deal based on matching criteria (assert operation)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "values": {
                "type": "object",
                "additionalProperties": {},
                "description": "Key-value pairs of attributes for the deal"
              },
              "matching_attribute": {
                "type": "string",
                "description": "The ID or slug of the attribute to use to check if a deal already exists. The attribute must be unique."
              }
            },
            "required": ["values"],
            "additionalProperties": false,
            "description": "The deal data with matching criteria for assert operation"
          }
        },
        "required": ["data"]
      }
    },
    {
      "name": "delete_deal",
      "description": "Delete a deal by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deal_id": {
            "type": "string",
            "description": "The ID of the deal to delete"
          }
        },
        "required": ["deal_id"]
      }
    },
    {
      "name": "get_deal_attribute_values",
      "description": "Get all values for a specific attribute on a deal record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deal_id": {
            "type": "string",
            "description": "The ID of the deal record"
          },
          "attribute": {
            "type": "string",
            "description": "The attribute ID or slug"
          },
          "show_historic": {
            "type": "boolean",
            "description": "Include historic values"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results to return"
          },
          "offset": {
            "type": "number",
            "description": "Number of results to skip"
          }
        },
        "required": ["deal_id", "attribute"]
      }
    },
    {
      "name": "get_deal_entries",
      "description": "List all list entries for a specific deal record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "deal_id": {
            "type": "string",
            "description": "The ID of the deal record"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results to return (default: 100, max: 1000)"
          },
          "offset": {
            "type": "number",
            "description": "Number of results to skip"
          }
        },
        "required": ["deal_id"]
      }
    },
    {
      "name": "list_lists",
      "description": "Get all lists in the workspace",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "get_list",
      "description": "Get details of a specific list",
      "inputSchema": {
        "type": "object",
        "properties": {
          "list": {
            "type": "string",
            "description": "List ID or slug"
          }
        },
        "required": ["list"]
      }
    },
    {
      "name": "search_list_entries",
      "description": "Search entries in a specific list",
      "inputSchema": {
        "type": "object",
        "properties": {
          "list": {
            "type": "string",
            "description": "List ID or slug"
          },
          "query": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of entries to return (max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of entries to skip"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Sort criteria"
              }
            },
            "additionalProperties": false,
            "description": "Search criteria and filters"
          }
        },
        "required": ["list"]
      }
    },
    {
      "name": "get_list_entry",
      "description": "Get a specific list entry by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "list": {
            "type": "string",
            "description": "List ID or slug"
          },
          "entry_id": {
            "type": "string",
            "description": "ID of the entry to get"
          }
        },
        "required": ["list", "entry_id"]
      }
    },
    {
      "name": "get_list_entry_attribute_values",
      "description": "Get all values for a specific attribute on a list entry",
      "inputSchema": {
        "type": "object",
        "properties": {
          "list": {
            "type": "string",
            "description": "List ID or slug"
          },
          "entry_id": {
            "type": "string",
            "description": "ID of the entry"
          },
          "attribute": {
            "type": "string",
            "description": "The attribute ID or slug"
          },
          "show_historic": {
            "type": "boolean",
            "description": "Include historic values"
          }
        },
        "required": ["list", "entry_id", "attribute"]
      }
    },
    {
      "name": "list_notes",
      "description": "List notes, optionally filtered by record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "record_id": {
            "type": "string",
            "description": "Optional: filter notes by record ID"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "Maximum number of notes to return (required, max: 10)"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "description": "Number of notes to skip for pagination"
          }
        },
        "required": ["limit"]
      }
    },
    {
      "name": "get_note",
      "description": "Get a specific note by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "note_id": {
            "type": "string",
            "description": "The ID of the note to retrieve"
          }
        },
        "required": ["note_id"]
      }
    },
    {
      "name": "create_note",
      "description": "Create a new note for a record",
      "inputSchema": {
        "type": "object",
        "properties": {
          "record_id": {
            "type": "string",
            "description": "ID of the record to attach the note to"
          },
          "content": {
            "type": "string",
            "description": "The note content"
          },
          "title": {
            "type": "string",
            "description": "Optional title for the note"
          },
          "parent_object": {
            "type": "string",
            "description": "The object type (e.g., 'people', 'companies') - defaults to 'people'"
          }
        },
        "required": ["record_id", "content"]
      }
    },
    {
      "name": "delete_note",
      "description": "Delete a note by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "note_id": {
            "type": "string",
            "description": "The ID of the note to delete"
          }
        },
        "required": ["note_id"]
      }
    },
    {
      "name": "list_threads",
      "description": "List comment threads, optionally filtered by record or entry",
      "inputSchema": {
        "type": "object",
        "properties": {
          "record_id": {
            "type": "string",
            "description": "Optional: filter threads by record ID"
          },
          "entry_id": {
            "type": "string",
            "description": "Optional: filter threads by list entry ID"
          },
          "limit": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "Maximum number of threads to return (required, max: 10)"
          },
          "offset": {
            "type": "number",
            "minimum": 0,
            "description": "Number of threads to skip for pagination"
          }
        },
        "required": ["limit"]
      }
    },
    {
      "name": "get_thread",
      "description": "Get all comments in a thread",
      "inputSchema": {
        "type": "object",
        "properties": {
          "thread_id": {
            "type": "string",
            "description": "The ID of the thread to retrieve"
          }
        },
        "required": ["thread_id"]
      }
    },
    {
      "name": "search_users",
      "description": "Search for users in Attio CRM with filtering and sorting options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of users to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of users to skip for pagination"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "get_user",
      "description": "Get a specific user by ID with all their data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The ID of the user to retrieve"
          }
        },
        "required": ["user_id"]
      }
    },
    {
      "name": "search_workspaces",
      "description": "Search for workspaces in Attio CRM with filtering and sorting options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 10,
                "description": "Maximum number of workspaces to return (required, max: 10)"
              },
              "offset": {
                "type": "number",
                "minimum": 0,
                "description": "Number of workspaces to skip for pagination"
              },
              "sorts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": ["asc", "desc"]
                    },
                    "field": {
                      "type": "string"
                    },
                    "attribute": {
                      "type": "string"
                    }
                  },
                  "required": ["direction", "field"],
                  "additionalProperties": false
                },
                "description": "Array of sort criteria"
              }
            },
            "required": ["limit"],
            "additionalProperties": false,
            "description": "Search criteria, filters, and sorting options"
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "get_workspace",
      "description": "Get a specific workspace by ID with all its data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "workspace_id": {
            "type": "string",
            "description": "The ID of the workspace to retrieve"
          }
        },
        "required": ["workspace_id"]
      }
    }
  ]
}
